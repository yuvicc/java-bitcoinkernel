plugins {
    id 'java'
    id "io.github.krakowski.jextract" version "0.5.0"
}

// Define paths for Bitcoin Core
def bitcoinCoreDir = file("${project.projectDir}/bitcoinkernel/bitcoin")
def bitcoinBuildDir = file("${bitcoinCoreDir}/build")
def bitcoinKernelHeader = file("${bitcoinCoreDir}/src/kernel/bitcoinkernel.h")

// Task to build Bitcoin Core with kernel library
tasks.register('buildBitcoinCore', Exec) {
    workingDir bitcoinCoreDir

    // Configure Bitcoin Core build
    commandLine 'cmake', '-B', 'build',
            '-DBUILD_KERNEL_LIB=ON',
            '-DBUILD_UTIL_CHAINSTATE=ON'

    // Only run if build directory doesn't exist or header has changed
    inputs.file bitcoinKernelHeader
    inputs.dir "${bitcoinCoreDir}/src"
    outputs.dir bitcoinBuildDir
}

// Task to compile the built Bitcoin Core
tasks.register('compileBitcoinCore', Exec) {
    dependsOn buildBitcoinCore
    workingDir bitcoinCoreDir

    // todo: add more robust approach here for compiling parallelly, for now I have kept it low(we can use nproc here but it crashes my machine)
    commandLine 'cmake', '--build', 'build', '-j4'

    inputs.dir bitcoinBuildDir
    outputs.files(
            "${bitcoinBuildDir}/src/kernel/libbitcoinkernel.so",
            "${bitcoinBuildDir}/src/kernel/libbitcoinkernel.dylib"  // For macOS
    )
}
compileBitcoinCore.dependsOn(buildBitcoinCore)

// Configure jextract to generate Java bindings
jextract {
    header(bitcoinKernelHeader.absolutePath) {
        // Point to the compiled library - adjust extension based on your OS
        libraries = [
                ":${bitcoinBuildDir}/src/kernel/libbitcoinkernel.so",
                ":${bitcoinBuildDir}/src/kernel/libbitcoinkernel.dylib"
        ]
        targetPackage = 'org.bitcoinkernel'
        className = 'BitcoinKernelBindings'

        // Include directories for dependencies
        includes = [
                "${bitcoinCoreDir}/src",
                "${bitcoinCoreDir}/src/kernel",
                "${bitcoinBuildDir}/src/kernel"  // For generated headers
        ]
    }
}

// Configure source sets
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
            // Add jextract generated sources
            srcDir "${buildDir}/generated/sources/jextract"
        }
    }
}

// Ensure proper build order
jextract.dependsOn compileBitcoinCore
compileJava.dependsOn jextract

// Java toolchain configuration
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}